// https://ru.reactjs.org/docs/handling-events.html


import React from 'react';
import ReactDOM from 'react-dom/client';
import '../styles.scss';

const root = ReactDOM.createRoot(document.getElementById('root'));



// –°–æ–±—ã—Ç–∏—è –≤ React –∏–º–µ–Ω—É—é—Ç—Å—è –≤ camelCase –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–µ —Å—Ç—Ä–æ–∫–æ–π, –∞ —Ñ—É–Ω–∫—Ü–∏–µ–π

// –°–∏–Ω—Ç–∞–∫—Å–∏—Å —á–∏—Å—Ç–æ–≥–æ HTML (üëé):
<button onclick='activateLasers()'>
  –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ª–∞–∑–µ—Ä—ã
</button>

// –°–∏–Ω—Ç–∞–∫—Å–∏—Å React (üëç):
<button onClick={activateLasers}>
  –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ª–∞–∑–µ—Ä—ã
</button>



// –í React –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å —Å–æ–±—ã—Ç–∏—è –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é, –≤–µ—Ä–Ω—É–≤ false, –∫–∞–∫ –≤ —á–∏—Å—Ç–æ–º HTML

// –°–∏–Ω—Ç–∞–∫—Å–∏—Å —á–∏—Å—Ç–æ–≥–æ HTML:
<form onsubmit='console.log("–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞"); return false'>
  <button type='submit'>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
</form>

// –°–∏–Ω—Ç–∞–∫—Å–∏—Å React (üëç):
function Form() {
  function handleSubmit(e) {
    e.preventDefault();
    console.log('–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');
  }

  return (
      <form onSubmit={handleSubmit}>
        <button type='submit'>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
      </form>
  );
}



// –ü—Ä–∏ –ø—Ä–æ—Å–ª—É—à–∫–µ —Å–æ–±—ã—Ç–∏–π –≤ React –Ω–µ –Ω—É–∂–µ–Ω `addEventListener*()`, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è.
// –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –º–µ—Ç–æ–¥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
class ToggleButton extends React.Component {
  constructor(props) {
    super(props);
    this.state = {isToggleOn: true};
  }

  handleClick = () => {                         // –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è, —Ç–∫ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –≤ –∫–∞—á-–≤–µ –∫–æ–ª–±–µ–∫–∞ –Ω–µ —Ç–µ—Ä—è–µ—Ç this. –≠—Ç–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –ø—É–±–ª–∏—á–Ω—ã—Ö –ø–æ–ª–µ–π.
    this.setState(prevState => ({
      isToggleOn: !prevState.isToggleOn,
    }));
  }

  render() {
    return (
        <button onClick={this.handleClick}>
          {this.state.isToggleOn ? '–í–∫–ª—é—á–µ–Ω–æ' : '–í—ã–∫–ª—é—á–µ–Ω–æ'}
        </button>
    )
  }
}



// –ß—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä id), —É–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –≤ –∫–∞—á-–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–¥–∞—á–µ–π —Å–æ–±—ã—Ç–∏—è:
<button onClick={(event) => this.deleteRow(id, event)}>–£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ—á–∫—É</button>